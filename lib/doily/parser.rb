#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..id316d8caed6', 'lib/doily/parser.y', 84

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/else/)
        @tokens.push [:ELSE, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/[(){}\[\],\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z_]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..id316d8caed6

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 22, :_reduce_none,
 7, 23, :_reduce_2,
 0, 24, :_reduce_3,
 1, 24, :_reduce_4,
 3, 24, :_reduce_5,
 0, 25, :_reduce_6,
 1, 25, :_reduce_7,
 3, 25, :_reduce_8,
 1, 26, :_reduce_none,
 1, 26, :_reduce_none,
 1, 26, :_reduce_none,
 1, 26, :_reduce_none,
 1, 26, :_reduce_none,
 1, 27, :_reduce_14,
 1, 27, :_reduce_15,
 1, 27, :_reduce_none,
 3, 27, :_reduce_17,
 3, 27, :_reduce_18,
 4, 27, :_reduce_19,
 4, 27, :_reduce_20,
 1, 32, :_reduce_21,
 0, 33, :_reduce_22,
 1, 33, :_reduce_23,
 3, 33, :_reduce_24,
 3, 35, :_reduce_25,
 0, 34, :_reduce_26,
 1, 34, :_reduce_27,
 3, 34, :_reduce_28,
 3, 29, :_reduce_29,
 2, 28, :_reduce_30,
 3, 30, :_reduce_31,
 7, 31, :_reduce_32,
 11, 31, :_reduce_33 ]

racc_reduce_n = 34

racc_shift_n = 64

racc_action_table = [
    14,    55,    17,    19,    21,    23,    52,    33,    14,    13,
    17,    19,    21,    23,     3,    33,    14,    13,    17,    19,
    21,    23,    41,    39,    14,    13,    17,    19,    21,    23,
    34,    40,    14,    13,    17,    19,    21,    23,    45,    46,
    14,    13,    17,    19,    21,    23,    31,    30,    14,    13,
    17,    19,    21,    23,    37,    38,    21,    13,    38,    21,
    38,    35,    36,    38,    35,    36,    35,    36,     8,    35,
    36,    19,    21,    23,    19,    21,    23,    13,    11,    32,
    13,    19,    21,    23,    33,    53,    10,    13,    54,     9,
     8,    56,     6,     5,    59,    60,    61,     4,    63 ]

racc_action_check = [
    30,    49,    30,    30,    30,    30,    42,    49,    61,    30,
    61,    61,    61,    61,     0,    42,    56,    61,    56,    56,
    56,    56,    29,    27,    55,    56,    55,    55,    55,    55,
    17,    28,    32,    55,    32,    32,    32,    32,    35,    36,
    38,    32,    38,    38,    38,    38,    15,    14,    11,    38,
    11,    11,    11,    11,    18,    18,    40,    11,    44,    13,
    47,    18,    18,    51,    44,    44,    47,    47,    10,    51,
    51,    37,    37,    37,    33,    33,    33,    37,     9,    16,
    33,    41,    41,    41,    16,    46,     8,    41,    48,     7,
     5,    52,     4,     3,    58,    59,    60,     1,    62 ]

racc_action_pointer = [
    12,    97,   nil,    83,    92,    84,   nil,    78,    72,    66,
    62,    45,   nil,    52,    37,    33,    64,    24,    45,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    17,     3,
    -3,   nil,    29,    68,   nil,    32,    32,    65,    37,   nil,
    49,    75,    -5,   nil,    48,   nil,    67,    50,    77,   -13,
   nil,    53,    79,   nil,   nil,    21,    13,   nil,    81,    91,
    84,     5,    85,   nil ]

racc_action_default = [
   -34,   -34,    -1,   -34,   -34,    -3,    64,   -34,    -4,   -34,
    -3,    -6,    -5,   -22,   -34,   -34,    -7,   -34,    -9,   -14,
   -10,   -21,   -11,   -15,   -12,   -13,   -16,   -34,   -23,   -34,
   -34,    -2,    -6,   -34,   -30,   -34,   -34,   -34,   -26,   -17,
   -22,   -34,   -34,    -8,   -29,   -18,   -34,   -31,   -34,   -27,
   -24,   -25,   -34,   -19,   -20,   -26,    -6,   -28,   -34,   -32,
   -34,    -6,   -34,   -33 ]

racc_goto_table = [
    15,    27,    29,    48,    44,    42,     7,     2,    47,     1,
   nil,    12,    51,    49,   nil,   nil,   nil,   nil,   nil,   nil,
    57,    43,   nil,   nil,   nil,   nil,   nil,   nil,    50,    29,
    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,
    62 ]

racc_goto_check = [
     4,    12,    11,    13,     6,     5,     3,     2,     6,     1,
   nil,     3,     6,     5,   nil,   nil,   nil,   nil,   nil,   nil,
    13,     4,   nil,   nil,   nil,   nil,   nil,   nil,    12,    11,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
     4 ]

racc_goto_pointer = [
   nil,     9,     7,     1,   -11,   -25,   -29,   nil,   nil,   nil,
   nil,   -11,   -12,   -35,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    16,    18,    20,    22,    24,
    25,    26,   nil,   nil,    28 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :ELSE => 4,
 :VAR => 5,
 :IDENTIFIER => 6,
 :STRING_LITERAL => 7,
 :INTEGER_LITERAL => 8,
 :BINARY_OPERATOR => 9,
 "(" => 10,
 ")" => 11,
 "{" => 12,
 "}" => 13,
 "," => 14,
 ";" => 15,
 "." => 16,
 "[" => 17,
 "]" => 18,
 ":" => 19,
 "=" => 20 }

racc_use_result_var = true

racc_nt_base = 21

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'ELSE',
'VAR',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'"{"',
'"}"',
'","',
'";"',
'"."',
'"["',
'"]"',
'":"',
'"="',
'$start',
'target',
'function_definition',
'argument_name_list',
'expression_list',
'expression',
'reference',
'declaration',
'assignment',
'binary_expression',
'if_expression',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 21
  def _reduce_7( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 22
  def _reduce_8( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 34
  def _reduce_14( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 35
  def _reduce_15( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

 # reduce 16 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 37
  def _reduce_17( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 38
  def _reduce_18( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 39
  def _reduce_19( val, _values, result )
 result = Access.new(val[0], eval(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 40
  def _reduce_20( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 44
  def _reduce_21( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 48
  def _reduce_22( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 49
  def _reduce_23( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 50
  def _reduce_24( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 54
  def _reduce_25( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 58
  def _reduce_26( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 59
  def _reduce_27( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 60
  def _reduce_28( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 64
  def _reduce_29( val, _values, result )
 result = Assignment.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 68
  def _reduce_30( val, _values, result )
 result = Declaration.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 72
  def _reduce_31( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 76
  def _reduce_32( val, _values, result )
 result = Conditional.new(val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 77
  def _reduce_33( val, _values, result )
 result = Conditional.new(val[2], val[5], val[9])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
