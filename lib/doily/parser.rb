#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..id73559e8d20', 'lib/doily/parser.y', 78

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/[(){}\[\],\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..id73559e8d20

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 21, :_reduce_none,
 7, 22, :_reduce_2,
 0, 23, :_reduce_3,
 1, 23, :_reduce_4,
 3, 23, :_reduce_5,
 0, 24, :_reduce_6,
 1, 24, :_reduce_7,
 3, 24, :_reduce_8,
 1, 25, :_reduce_none,
 1, 25, :_reduce_none,
 1, 25, :_reduce_none,
 1, 25, :_reduce_none,
 1, 26, :_reduce_13,
 1, 26, :_reduce_14,
 1, 26, :_reduce_none,
 3, 26, :_reduce_16,
 3, 26, :_reduce_17,
 4, 26, :_reduce_18,
 4, 26, :_reduce_19,
 1, 30, :_reduce_20,
 0, 31, :_reduce_21,
 1, 31, :_reduce_22,
 3, 31, :_reduce_23,
 3, 33, :_reduce_24,
 0, 32, :_reduce_25,
 1, 32, :_reduce_26,
 3, 32, :_reduce_27,
 4, 27, :_reduce_28,
 3, 28, :_reduce_29,
 7, 29, :_reduce_30 ]

racc_reduce_n = 31

racc_shift_n = 59

racc_action_table = [
    15,    17,    19,    21,    23,     2,    32,    30,    13,    15,
    17,    19,    21,    23,    37,    38,    39,    13,    15,    17,
    19,    21,    23,    29,    31,    42,    13,    15,    17,    19,
    21,    23,    43,    44,    21,    13,    15,    17,    19,    21,
    23,     7,    21,    11,    13,    15,    17,    19,    21,    23,
    35,    36,    50,    13,    36,    10,    36,    33,    34,    36,
    33,    34,    33,    34,    52,    33,    34,    19,    21,    23,
    19,    21,    23,    13,     9,    53,    13,    19,    21,    23,
    54,     8,    55,    13,     7,     5,     4,    58 ]

racc_action_check = [
    31,    31,    31,    31,    31,     0,    17,    15,    31,    55,
    55,    55,    55,    55,    26,    27,    28,    55,    53,    53,
    53,    53,    53,    14,    16,    32,    53,    30,    30,    30,
    30,    30,    33,    34,    13,    30,    11,    11,    11,    11,
    11,    10,    37,     9,    11,    36,    36,    36,    36,    36,
    18,    18,    40,    36,    45,     7,    51,    18,    18,    49,
    45,    45,    51,    51,    44,    49,    49,    35,    35,    35,
    38,    38,    38,    35,     6,    46,    38,    42,    42,    42,
    47,     5,    50,    42,     4,     3,     2,    57 ]

racc_action_pointer = [
     3,   nil,    77,    85,    79,    81,    64,    42,   nil,    32,
    36,    33,   nil,    28,    11,    -2,    10,     1,    42,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,    -3,     4,   nil,
    24,    -3,     6,    27,    27,    62,    42,    36,    65,   nil,
    42,   nil,    72,   nil,    47,    45,    62,    70,   nil,    50,
    71,    47,   nil,    15,   nil,     6,   nil,    75,   nil ]

racc_action_default = [
   -31,    -1,   -31,   -31,    -3,   -31,   -31,    -4,    59,   -31,
    -3,    -6,    -5,   -21,   -31,   -31,    -7,   -31,    -9,   -13,
   -10,   -20,   -11,   -14,   -12,   -15,   -22,   -31,   -31,    -2,
   -31,    -6,   -31,   -31,   -31,   -31,   -25,   -21,   -31,   -16,
   -31,    -8,   -31,   -17,   -31,   -29,   -26,   -31,   -23,   -24,
   -31,   -28,   -18,   -25,   -19,    -6,   -27,   -31,   -30 ]

racc_goto_table = [
    14,    28,    27,     1,    40,    47,    45,     3,     6,    49,
    46,   nil,   nil,    51,    12,   nil,   nil,   nil,   nil,   nil,
    41,   nil,    56,   nil,   nil,    48,    27,    46,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    57 ]

racc_goto_check = [
     4,    11,    10,     2,     5,    12,     6,     1,     3,     6,
     5,   nil,   nil,     6,     3,   nil,   nil,   nil,   nil,   nil,
     4,   nil,    12,   nil,   nil,    11,    10,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     7,     3,     4,   -11,   -26,   -29,   nil,   nil,   nil,
   -11,   -12,   -31,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    16,    18,    20,    22,    24,
    25,   nil,   nil,    26 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :VAR => 4,
 :IDENTIFIER => 5,
 :STRING_LITERAL => 6,
 :INTEGER_LITERAL => 7,
 :BINARY_OPERATOR => 8,
 "(" => 9,
 ")" => 10,
 "{" => 11,
 "}" => 12,
 "," => 13,
 ";" => 14,
 "." => 15,
 "[" => 16,
 "]" => 17,
 ":" => 18,
 "=" => 19 }

racc_use_result_var = true

racc_nt_base = 20

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'VAR',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'"{"',
'"}"',
'","',
'";"',
'"."',
'"["',
'"]"',
'":"',
'"="',
'$start',
'target',
'function_definition',
'argument_name_list',
'expression_list',
'expression',
'reference',
'assignment_expression',
'binary_expression',
'if_expression',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 21
  def _reduce_7( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 22
  def _reduce_8( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 33
  def _reduce_13( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 34
  def _reduce_14( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

 # reduce 15 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 36
  def _reduce_16( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 37
  def _reduce_17( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 38
  def _reduce_18( val, _values, result )
 result = Access.new(val[0], eval(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 39
  def _reduce_19( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 43
  def _reduce_20( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 47
  def _reduce_21( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 48
  def _reduce_22( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 49
  def _reduce_23( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 53
  def _reduce_24( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 57
  def _reduce_25( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 58
  def _reduce_26( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 59
  def _reduce_27( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 63
  def _reduce_28( val, _values, result )
 result = Assignment.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 67
  def _reduce_29( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 71
  def _reduce_30( val, _values, result )
 result = Conditional.new(val[2], val[5])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
