#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..idbb7b142eab', 'lib/doily/parser.y', 77

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/[(){},\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..idbb7b142eab

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 19, :_reduce_none,
 7, 20, :_reduce_2,
 0, 21, :_reduce_3,
 1, 21, :_reduce_4,
 3, 21, :_reduce_5,
 0, 22, :_reduce_6,
 1, 22, :_reduce_7,
 3, 22, :_reduce_8,
 1, 23, :_reduce_none,
 1, 23, :_reduce_none,
 1, 23, :_reduce_none,
 1, 23, :_reduce_none,
 1, 24, :_reduce_13,
 1, 24, :_reduce_14,
 1, 24, :_reduce_none,
 3, 24, :_reduce_16,
 3, 24, :_reduce_17,
 4, 24, :_reduce_18,
 1, 28, :_reduce_19,
 0, 29, :_reduce_20,
 1, 29, :_reduce_21,
 3, 29, :_reduce_22,
 3, 31, :_reduce_23,
 0, 30, :_reduce_24,
 1, 30, :_reduce_25,
 3, 30, :_reduce_26,
 4, 25, :_reduce_27,
 3, 26, :_reduce_28,
 7, 27, :_reduce_29 ]

racc_reduce_n = 30

racc_shift_n = 56

racc_action_table = [
    17,    19,    21,    23,    25,     1,    34,    35,    13,    17,
    19,    21,    23,    25,    36,    37,    38,    13,    17,    19,
    21,    23,    25,    30,    40,    29,    13,    17,    19,    21,
    23,    25,    23,    12,    45,    13,    17,    19,    21,    23,
    25,     6,    23,    10,    13,    17,    19,    21,    23,    25,
    32,    33,    33,    13,    21,    23,    25,    31,    31,    33,
    13,    21,    23,    25,    48,    31,    33,    13,    21,    23,
    25,    49,    31,    50,    13,     9,     8,     6,    53,     5,
     4,    55 ]

racc_action_check = [
    30,    30,    30,    30,    30,     0,    17,    19,    30,    53,
    53,    53,    53,    53,    26,    27,    28,    53,    33,    33,
    33,    33,    33,    15,    31,    14,    33,    48,    48,    48,
    48,    48,    13,    10,    35,    48,    12,    12,    12,    12,
    12,     9,    38,     7,    12,    34,    34,    34,    34,    34,
    16,    16,    46,    34,    36,    36,    36,    16,    46,    51,
    36,    45,    45,    45,    42,    51,    41,    45,    32,    32,
    32,    43,    41,    44,    32,     6,     5,     4,    50,     2,
     1,    54 ]

racc_action_pointer = [
     3,    71,    79,   nil,    72,    76,    62,    33,   nil,    36,
    22,   nil,    33,    26,    13,     9,    42,    -3,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,    -2,     3,     3,   nil,
    -3,    19,    63,    15,    42,    17,    49,   nil,    36,   nil,
   nil,    57,    51,    61,    63,    56,    43,   nil,    24,   nil,
    67,    50,   nil,     6,    69,   nil ]

racc_action_default = [
   -30,   -30,   -30,    -1,    -3,   -30,    -4,   -30,    56,    -3,
   -30,    -5,    -6,   -20,   -30,    -7,    -9,   -30,   -10,   -30,
   -11,   -13,   -12,   -19,   -15,   -14,   -30,   -30,   -21,    -2,
    -6,   -30,   -30,   -24,   -30,   -30,   -30,   -16,   -20,    -8,
   -17,   -28,   -25,   -30,   -30,   -30,   -23,   -22,   -24,   -18,
   -30,   -27,   -26,    -6,   -30,   -29 ]

racc_goto_table = [
    14,    27,    26,    41,    43,    42,    44,    46,     7,     3,
     2,   nil,   nil,    11,   nil,   nil,    51,   nil,    39,    52,
    42,   nil,   nil,   nil,   nil,   nil,    47,    26,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    54 ]

racc_goto_check = [
     4,    11,    10,     6,    12,     5,     5,     6,     3,     2,
     1,   nil,   nil,     3,   nil,   nil,     6,   nil,     4,    12,
     5,   nil,   nil,   nil,   nil,   nil,    11,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4 ]

racc_goto_pointer = [
   nil,    10,     9,     4,   -12,   -28,   -29,   nil,   nil,   nil,
   -11,   -12,   -29,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    15,    16,    18,    20,    22,
    24,   nil,   nil,    28 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :VAR => 4,
 :IDENTIFIER => 5,
 :STRING_LITERAL => 6,
 :INTEGER_LITERAL => 7,
 :BINARY_OPERATOR => 8,
 "(" => 9,
 ")" => 10,
 "{" => 11,
 "}" => 12,
 "," => 13,
 ";" => 14,
 "." => 15,
 ":" => 16,
 "=" => 17 }

racc_use_result_var = true

racc_nt_base = 18

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'VAR',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'"{"',
'"}"',
'","',
'";"',
'"."',
'":"',
'"="',
'$start',
'target',
'function_definition',
'argument_name_list',
'expression_list',
'expression',
'reference',
'assignment_expression',
'binary_expression',
'if_expression',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 21
  def _reduce_7( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 22
  def _reduce_8( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 33
  def _reduce_13( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 34
  def _reduce_14( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

 # reduce 15 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 36
  def _reduce_16( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 37
  def _reduce_17( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 38
  def _reduce_18( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 42
  def _reduce_19( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 46
  def _reduce_20( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 47
  def _reduce_21( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 48
  def _reduce_22( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 52
  def _reduce_23( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 56
  def _reduce_24( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 57
  def _reduce_25( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 58
  def _reduce_26( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 62
  def _reduce_27( val, _values, result )
 result = Assignment.new(val[1], val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 66
  def _reduce_28( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 70
  def _reduce_29( val, _values, result )
 result = Conditional.new(val[2], val[5])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
