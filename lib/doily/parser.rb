#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..id3ffa1de1f1', 'lib/doily/parser.y', 89

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/else/)
        @tokens.push [:ELSE, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/true|false/)
        @tokens.push [:BOOLEAN_LITERAL, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/[(){}\[\],\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z_]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..id3ffa1de1f1

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 23, :_reduce_none,
 5, 24, :_reduce_2,
 0, 25, :_reduce_3,
 1, 25, :_reduce_4,
 3, 25, :_reduce_5,
 3, 26, :_reduce_6,
 0, 27, :_reduce_7,
 1, 27, :_reduce_8,
 3, 27, :_reduce_9,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 1, 29, :_reduce_15,
 1, 29, :_reduce_16,
 1, 29, :_reduce_17,
 1, 29, :_reduce_none,
 3, 29, :_reduce_19,
 3, 29, :_reduce_20,
 4, 29, :_reduce_21,
 4, 29, :_reduce_22,
 1, 34, :_reduce_23,
 0, 35, :_reduce_24,
 1, 35, :_reduce_25,
 3, 35, :_reduce_26,
 3, 37, :_reduce_27,
 0, 36, :_reduce_28,
 1, 36, :_reduce_29,
 3, 36, :_reduce_30,
 3, 31, :_reduce_31,
 2, 30, :_reduce_32,
 3, 32, :_reduce_33,
 5, 33, :_reduce_34,
 7, 33, :_reduce_35 ]

racc_reduce_n = 36

racc_shift_n = 62

racc_action_table = [
    16,    56,    18,    20,    22,    24,    26,    44,    52,    36,
    16,    17,    18,    20,    22,    24,    26,    36,    33,    42,
    16,    17,    18,    20,    22,    24,    26,    43,    34,    24,
    16,    17,    18,    20,    22,    24,    26,    29,     2,    49,
    16,    17,    18,    20,    22,    24,    26,    20,    22,    24,
    26,    17,    40,    37,    50,    17,     8,    11,    10,    38,
    39,    20,    22,    24,    26,    20,    22,    24,    26,    17,
    37,    24,    37,    17,    37,     9,    38,    39,    38,    39,
    38,    39,    35,    55,     8,    57,     6,    36,    11,     5,
     4,    60,    11 ]

racc_action_check = [
    11,    48,    11,    11,    11,    11,    11,    32,    41,    48,
    56,    11,    56,    56,    56,    56,    56,    41,    18,    30,
    29,    56,    29,    29,    29,    29,    29,    31,    19,    17,
    35,    29,    35,    35,    35,    35,    35,    16,     0,    38,
    37,    35,    37,    37,    37,    37,    37,    42,    42,    42,
    42,    37,    23,    23,    39,    42,    10,     9,     8,    23,
    23,    40,    40,    40,    40,    36,    36,    36,    36,    40,
    51,    44,    53,    36,    46,     7,    51,    51,    53,    53,
    46,    46,    21,    47,     5,    50,     4,    21,    52,     2,
     1,    58,    60 ]

racc_action_pointer = [
    36,    90,    78,   nil,    86,    77,   nil,    63,    45,    43,
    49,    -3,   nil,   nil,   nil,   nil,    26,    21,    11,    13,
   nil,    66,   nil,    42,   nil,   nil,   nil,   nil,   nil,    17,
    -1,    12,    -6,   nil,   nil,    27,    59,    37,    32,    46,
    55,    -4,    41,   nil,    63,   nil,    63,    71,   -12,   nil,
    66,    59,    74,    61,   nil,   nil,     7,   nil,    87,   nil,
    78,   nil ]

racc_action_default = [
   -36,   -36,   -36,    -1,   -36,    -3,    62,   -36,    -4,   -36,
    -3,    -7,    -2,    -5,   -14,   -18,   -36,   -24,   -36,   -36,
   -17,    -8,   -15,   -10,   -23,   -11,   -16,   -12,   -13,   -36,
   -36,   -36,   -25,   -32,    -6,    -7,   -36,   -28,   -36,   -36,
   -36,   -36,   -36,   -19,   -24,    -9,   -31,   -36,   -29,   -20,
   -36,   -33,   -36,   -27,   -26,   -22,   -28,   -21,   -34,   -30,
   -36,   -35 ]

racc_goto_table = [
    12,    31,    41,    30,    47,    46,     3,    19,     7,    51,
    48,    53,     1,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    59,   nil,   nil,   nil,   nil,    54,    48,
    30,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    61 ]

racc_goto_check = [
     4,    13,     6,    12,    14,     7,     2,     5,     3,     7,
     6,     7,     1,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,    13,     6,
    12,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4 ]

racc_goto_pointer = [
   nil,    12,     6,     3,    -9,    -4,   -27,   -31,   nil,   nil,
   nil,   nil,   -14,   -16,   -33,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    21,    23,    25,    27,
    28,    14,    15,   nil,   nil,    32 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :ELSE => 4,
 :VAR => 5,
 :BOOLEAN_LITERAL => 6,
 :IDENTIFIER => 7,
 :STRING_LITERAL => 8,
 :INTEGER_LITERAL => 9,
 :BINARY_OPERATOR => 10,
 "(" => 11,
 ")" => 12,
 "," => 13,
 "{" => 14,
 "}" => 15,
 ";" => 16,
 "." => 17,
 "[" => 18,
 "]" => 19,
 ":" => 20,
 "=" => 21 }

racc_use_result_var = true

racc_nt_base = 22

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'ELSE',
'VAR',
'BOOLEAN_LITERAL',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'","',
'"{"',
'"}"',
'";"',
'"."',
'"["',
'"]"',
'":"',
'"="',
'$start',
'target',
'function_definition',
'argument_name_list',
'block',
'expression_list',
'expression',
'reference',
'declaration',
'assignment',
'binary_expression',
'if_expression',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = Block.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 24
  def _reduce_7( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 25
  def _reduce_8( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 26
  def _reduce_9( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 38
  def _reduce_15( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 39
  def _reduce_16( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 40
  def _reduce_17( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

 # reduce 18 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 42
  def _reduce_19( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 43
  def _reduce_20( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 44
  def _reduce_21( val, _values, result )
 result = Access.new(val[0], eval(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 45
  def _reduce_22( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 49
  def _reduce_23( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 53
  def _reduce_24( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 54
  def _reduce_25( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 55
  def _reduce_26( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 59
  def _reduce_27( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 63
  def _reduce_28( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 64
  def _reduce_29( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 65
  def _reduce_30( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 69
  def _reduce_31( val, _values, result )
 result = Assignment.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 73
  def _reduce_32( val, _values, result )
 result = Declaration.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 77
  def _reduce_33( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 81
  def _reduce_34( val, _values, result )
 result = Conditional.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 82
  def _reduce_35( val, _values, result )
 result = Conditional.new(val[2], val[4], val[6])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
