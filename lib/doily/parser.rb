#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..ided4eb37549', 'lib/doily/parser.y', 98

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/else/)
        @tokens.push [:ELSE, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/true|false/)
        @tokens.push [:BOOLEAN_LITERAL, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/[(){}\[\],\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z_]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..ided4eb37549

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 23, :_reduce_none,
 5, 24, :_reduce_2,
 0, 25, :_reduce_3,
 1, 25, :_reduce_4,
 3, 25, :_reduce_5,
 2, 26, :_reduce_6,
 3, 26, :_reduce_7,
 1, 27, :_reduce_8,
 2, 27, :_reduce_9,
 1, 28, :_reduce_none,
 1, 28, :_reduce_none,
 1, 29, :_reduce_none,
 2, 29, :_reduce_none,
 1, 31, :_reduce_none,
 1, 31, :_reduce_none,
 1, 31, :_reduce_none,
 1, 31, :_reduce_none,
 1, 32, :_reduce_18,
 1, 32, :_reduce_19,
 1, 32, :_reduce_20,
 1, 32, :_reduce_none,
 3, 32, :_reduce_22,
 3, 32, :_reduce_23,
 4, 32, :_reduce_24,
 4, 32, :_reduce_25,
 1, 36, :_reduce_26,
 0, 37, :_reduce_27,
 1, 37, :_reduce_28,
 3, 37, :_reduce_29,
 3, 39, :_reduce_30,
 0, 38, :_reduce_31,
 1, 38, :_reduce_32,
 3, 38, :_reduce_33,
 3, 34, :_reduce_34,
 2, 33, :_reduce_35,
 3, 35, :_reduce_36,
 5, 30, :_reduce_37,
 7, 30, :_reduce_38 ]

racc_reduce_n = 39

racc_shift_n = 65

racc_action_table = [
    17,    55,    21,    23,    25,    27,    29,    47,    37,    36,
    40,    18,    20,    17,    59,    21,    23,    25,    27,    29,
    27,    46,    40,   -10,    18,    21,    23,    25,    27,    29,
    48,    32,     2,    52,    18,    21,    23,    25,    27,    29,
    53,     8,    11,    10,    18,    21,    23,    25,    27,    29,
    44,    41,    27,     9,    18,    58,     8,    42,    43,    23,
    25,    27,    29,    23,    25,    27,    29,    18,    60,     6,
    41,    18,    23,    25,    27,    29,    42,    43,    41,    11,
    18,    41,     5,     4,    42,    43,    39,    42,    43,    63,
    11,    40 ]

racc_action_check = [
    11,    45,    11,    11,    11,    11,    11,    34,    22,    21,
    45,    11,    11,    26,    51,    26,    26,    26,    26,    26,
    18,    33,    51,    28,    26,    59,    59,    59,    59,    59,
    35,    17,     0,    42,    59,    32,    32,    32,    32,    32,
    43,    10,     9,     8,    32,    41,    41,    41,    41,    41,
    31,    31,    48,     7,    41,    50,     5,    31,    31,    40,
    40,    40,    40,    46,    46,    46,    46,    40,    53,     4,
    49,    46,    44,    44,    44,    44,    49,    49,    54,    55,
    44,    56,     2,     1,    54,    54,    30,    56,    56,    61,
    63,    30 ]

racc_action_pointer = [
    30,    83,    71,   nil,    69,    49,   nil,    41,    30,    28,
    34,    -3,   nil,   nil,   nil,   nil,   nil,    20,    12,   nil,
   nil,     2,    -7,   nil,   nil,   nil,    10,   nil,     8,   nil,
    70,    40,    30,     1,    -8,    17,   nil,   nil,   nil,   nil,
    53,    40,    26,    32,    66,   -11,    57,   nil,    44,    59,
    43,     1,   nil,    49,    67,    65,    70,   nil,   nil,    20,
   nil,    85,   nil,    76,   nil ]

racc_action_default = [
   -39,   -39,   -39,    -1,   -39,    -3,    65,   -39,    -4,   -39,
    -3,   -39,    -2,    -5,   -15,   -16,   -17,   -39,   -27,   -21,
    -6,   -39,   -39,   -20,    -8,   -18,   -39,   -26,   -12,   -19,
   -11,   -14,   -39,   -39,   -39,   -28,   -35,    -7,    -9,   -13,
   -39,   -31,   -39,   -39,   -39,   -39,   -39,   -22,   -27,   -34,
   -39,   -32,   -23,   -39,   -36,   -39,   -30,   -29,   -25,   -31,
   -24,   -37,   -33,   -39,   -38 ]

racc_goto_table = [
    12,    34,    33,    45,    50,    22,     3,    49,     1,     7,
   nil,    54,    51,    56,    13,   nil,   nil,   nil,   nil,   nil,
    38,   nil,    62,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    51,    57,    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    64 ]

racc_goto_check = [
     4,    15,    14,     9,    16,     5,     2,    10,     1,     3,
   nil,    10,     9,    10,     3,   nil,   nil,   nil,   nil,   nil,
     5,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     9,    15,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     8,     6,     4,    -9,    -6,   nil,   nil,   nil,   -29,
   -33,   nil,   nil,   nil,   -16,   -17,   -37,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    24,    26,    28,    30,
    31,    14,    15,    16,    19,   nil,   nil,    35 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :ELSE => 4,
 :VAR => 5,
 :BOOLEAN_LITERAL => 6,
 :IDENTIFIER => 7,
 :STRING_LITERAL => 8,
 :INTEGER_LITERAL => 9,
 :BINARY_OPERATOR => 10,
 "(" => 11,
 ")" => 12,
 "," => 13,
 "{" => 14,
 "}" => 15,
 ";" => 16,
 "." => 17,
 "[" => 18,
 "]" => 19,
 ":" => 20,
 "=" => 21 }

racc_use_result_var = true

racc_nt_base = 22

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'ELSE',
'VAR',
'BOOLEAN_LITERAL',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'","',
'"{"',
'"}"',
'";"',
'"."',
'"["',
'"]"',
'":"',
'"="',
'$start',
'target',
'function_definition',
'argument_name_list',
'block',
'statement_list',
'single_statement',
'leading_statement',
'if_statement',
'expression',
'reference',
'declaration',
'assignment',
'binary_expression',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = Block.new([])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 21
  def _reduce_7( val, _values, result )
 result = Block.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 25
  def _reduce_8( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 26
  def _reduce_9( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 47
  def _reduce_18( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 48
  def _reduce_19( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 49
  def _reduce_20( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 51
  def _reduce_22( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 52
  def _reduce_23( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 53
  def _reduce_24( val, _values, result )
 result = Access.new(val[0], eval(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 54
  def _reduce_25( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 58
  def _reduce_26( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 62
  def _reduce_27( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 63
  def _reduce_28( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 64
  def _reduce_29( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 68
  def _reduce_30( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 72
  def _reduce_31( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 73
  def _reduce_32( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 74
  def _reduce_33( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 78
  def _reduce_34( val, _values, result )
 result = Assignment.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 82
  def _reduce_35( val, _values, result )
 result = Declaration.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 86
  def _reduce_36( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 90
  def _reduce_37( val, _values, result )
 result = Conditional.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 91
  def _reduce_38( val, _values, result )
 result = Conditional.new(val[2], val[4], val[6])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
