#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/doily/parser.y".
#

require 'racc/parser'


require 'strscan'

module Doily

  class Parser < Racc::Parser

module_eval <<'..end lib/doily/parser.y modeval..ida7868b599d', 'lib/doily/parser.y', 107

  def self.function(string)
    new.parse(string)
  end

  def parse(string)
    @tokens = []
    scanner = StringScanner.new(string)

    until scanner.empty?
      case
			when scanner.scan(/\s+/)
				# ignore space
      when m = scanner.scan(/function/)
        @tokens.push [:FUNCTION, m]
      when m = scanner.scan(/if/)
        @tokens.push [:IF, m]
      when m = scanner.scan(/else/)
        @tokens.push [:ELSE, m]
      when m = scanner.scan(/for/)
        @tokens.push [:FOR, m]
      when m = scanner.scan(/var/)
        @tokens.push [:VAR, m]
      when m = scanner.scan(/true|false/)
        @tokens.push [:BOOLEAN_LITERAL, m]
      when m = scanner.scan(/==|</)
        @tokens.push [:BINARY_OPERATOR, m]
      when m = scanner.scan(/\+\+/)
        @tokens.push [m, m]
      when m = scanner.scan(/[(){}\[\],\.:;=]/)
        @tokens.push [m, m]
      when m = scanner.scan(/[a-zA-Z_]+/)
        @tokens.push [:IDENTIFIER, m]
      when m = scanner.scan(/"([^"])*"/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/'([^'])*'/)
        @tokens.push [:STRING_LITERAL, m]
      when m = scanner.scan(/\d+/)
        @tokens.push [:INTEGER_LITERAL, m]
      else
        raise ParseError.new(scanner)
      end
    end

    @tokens.push [false, false]
    do_parse
  end

  def next_token
    @tokens.shift
  end
..end lib/doily/parser.y modeval..ida7868b599d

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 25, :_reduce_none,
 5, 26, :_reduce_2,
 0, 27, :_reduce_3,
 1, 27, :_reduce_4,
 3, 27, :_reduce_5,
 2, 28, :_reduce_6,
 3, 28, :_reduce_7,
 1, 29, :_reduce_8,
 2, 29, :_reduce_9,
 1, 30, :_reduce_none,
 1, 30, :_reduce_none,
 2, 30, :_reduce_none,
 5, 31, :_reduce_13,
 7, 31, :_reduce_14,
 9, 32, :_reduce_15,
 1, 33, :_reduce_none,
 1, 33, :_reduce_none,
 1, 33, :_reduce_none,
 1, 33, :_reduce_none,
 1, 33, :_reduce_none,
 1, 34, :_reduce_none,
 1, 34, :_reduce_22,
 1, 34, :_reduce_23,
 1, 34, :_reduce_none,
 3, 34, :_reduce_25,
 3, 34, :_reduce_26,
 4, 34, :_reduce_27,
 4, 34, :_reduce_28,
 1, 39, :_reduce_29,
 1, 40, :_reduce_30,
 0, 41, :_reduce_31,
 1, 41, :_reduce_32,
 3, 41, :_reduce_33,
 3, 43, :_reduce_34,
 0, 42, :_reduce_35,
 1, 42, :_reduce_36,
 3, 42, :_reduce_37,
 3, 36, :_reduce_38,
 2, 35, :_reduce_39,
 3, 37, :_reduce_40,
 2, 38, :_reduce_41 ]

racc_reduce_n = 42

racc_shift_n = 78

racc_action_table = [
    18,    65,    22,    24,    27,    29,    31,    33,     1,    55,
    35,    56,    19,    23,    18,    76,    22,    24,    27,    29,
    31,    33,    48,    58,    35,    62,    19,    24,    27,    29,
    31,    33,    59,    35,    60,    47,    19,    24,    27,    29,
    31,    33,    46,    45,    31,    63,    19,    24,    27,    29,
    31,    33,    64,    41,     7,    31,    19,    24,    27,    29,
    31,    33,    11,    10,    11,     9,    19,    24,    27,    29,
    31,    33,     8,    72,     7,    11,    19,    24,    27,    29,
    31,    33,    27,    29,    31,    33,    19,    37,    38,     5,
    19,     4,    11,   nil,    39,    40,    27,    29,    31,    33,
    27,    29,    31,    33,    19,    38,   nil,    38,    19,    38,
   nil,    39,    40,    39,    40,    39,    40,    68,    73,    36,
   nil,   nil,    35,    35,    35 ]

racc_action_check = [
    11,    57,    11,    11,    11,    11,    11,    11,     0,    39,
    57,    40,    11,    11,    30,    75,    30,    30,    30,    30,
    30,    30,    28,    42,    75,    53,    30,    68,    68,    68,
    68,    68,    43,    53,    44,    25,    68,    73,    73,    73,
    73,    73,    24,    22,    19,    54,    73,    41,    41,    41,
    41,    41,    56,    18,    10,    60,    41,    62,    62,    62,
    62,    62,     9,     7,    65,     6,    62,    45,    45,    45,
    45,    45,     5,    70,     4,    72,    45,    38,    38,    38,
    38,    38,    58,    58,    58,    58,    38,    15,    15,     2,
    58,     1,    76,   nil,    15,    15,    35,    35,    35,    35,
    37,    37,    37,    37,    35,    50,   nil,    52,    37,    66,
   nil,    50,    50,    52,    52,    66,    66,    61,    71,    14,
   nil,   nil,    61,    71,    14 ]

racc_action_pointer = [
     6,    79,    89,   nil,    66,    72,    52,    49,   nil,    47,
    46,    -3,   nil,   nil,   102,    76,   nil,   nil,    41,    35,
   nil,   nil,    31,   nil,    34,    12,   nil,   nil,     6,   nil,
    11,   nil,   nil,   nil,   nil,    89,   nil,    93,    71,     1,
     2,    41,     2,    16,    20,    61,   nil,   nil,   nil,   nil,
    93,   nil,    95,    11,    32,   nil,    32,   -12,    75,   nil,
    46,   100,    51,   nil,   nil,    49,    97,   nil,    21,   nil,
    69,   101,    60,    31,   nil,     2,    77,   nil ]

racc_action_default = [
   -42,   -42,   -42,    -1,    -3,   -42,   -42,    -4,    78,   -42,
    -3,   -42,    -2,    -5,   -42,   -16,   -17,   -18,   -42,   -31,
   -19,   -20,   -42,    -6,   -42,   -21,   -24,   -23,   -42,   -29,
    -8,   -30,   -10,   -22,   -11,   -42,   -12,   -42,   -35,   -42,
   -42,   -42,   -42,   -42,   -32,   -42,   -39,   -41,    -7,    -9,
   -38,   -21,   -40,   -36,   -42,   -26,   -42,   -42,   -42,   -25,
   -31,   -42,   -35,   -28,   -27,   -42,   -34,   -33,   -42,   -37,
   -13,   -42,   -42,   -42,   -14,   -42,   -42,   -15 ]

racc_goto_table = [
    12,    43,    42,    53,    54,    28,    57,    51,     6,    51,
    61,    50,     3,    52,    13,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    49,   nil,   nil,    53,    69,   nil,
    51,   nil,   nil,    71,    66,   nil,   nil,   nil,    75,   nil,
   nil,   nil,    67,    42,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    70,   nil,   nil,   nil,
   nil,   nil,   nil,    74,   nil,   nil,   nil,    77 ]

racc_goto_check = [
     4,    17,    16,     9,    18,     5,     9,    15,     3,    15,
     9,    10,     2,    10,     3,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     5,   nil,   nil,     9,    18,   nil,
    15,   nil,   nil,     9,    10,   nil,   nil,   nil,     9,   nil,
   nil,   nil,    17,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    15,    12,     4,    -9,    -6,   nil,   nil,   nil,   -35,
   -24,   nil,   nil,   nil,   nil,   -28,   -17,   -18,   -34,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    30,    32,    34,    14,
    15,    16,    17,    20,    21,    25,    26,   nil,   nil,    44 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :FUNCTION => 2,
 :IF => 3,
 :ELSE => 4,
 :FOR => 5,
 :VAR => 6,
 :BOOLEAN_LITERAL => 7,
 :IDENTIFIER => 8,
 :STRING_LITERAL => 9,
 :INTEGER_LITERAL => 10,
 :BINARY_OPERATOR => 11,
 "(" => 12,
 ")" => 13,
 "," => 14,
 "{" => 15,
 "}" => 16,
 ";" => 17,
 "." => 18,
 "[" => 19,
 "]" => 20,
 ":" => 21,
 "=" => 22,
 "++" => 23 }

racc_use_result_var = true

racc_nt_base = 24

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'FUNCTION',
'IF',
'ELSE',
'FOR',
'VAR',
'BOOLEAN_LITERAL',
'IDENTIFIER',
'STRING_LITERAL',
'INTEGER_LITERAL',
'BINARY_OPERATOR',
'"("',
'")"',
'","',
'"{"',
'"}"',
'";"',
'"."',
'"["',
'"]"',
'":"',
'"="',
'"++"',
'$start',
'target',
'function_definition',
'argument_name_list',
'block',
'statement_list',
'statement',
'if_statement',
'for_loop',
'expression',
'reference',
'declaration',
'assignment',
'binary_expression',
'increment',
'variable',
'string_literal',
'key_value_list',
'argument_list',
'key_value']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 10
  def _reduce_2( val, _values, result )
 result = Function.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 14
  def _reduce_3( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 15
  def _reduce_4( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 16
  def _reduce_5( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 20
  def _reduce_6( val, _values, result )
 result = Block.new([])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 21
  def _reduce_7( val, _values, result )
 result = Block.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 25
  def _reduce_8( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 26
  def _reduce_9( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 36
  def _reduce_13( val, _values, result )
 result = Conditional.new(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 37
  def _reduce_14( val, _values, result )
 result = Conditional.new(val[2], val[4], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 41
  def _reduce_15( val, _values, result )
 result = Loop.new(val[2], val[4], val[6], val[8])
   result
  end
.,.,

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 54
  def _reduce_22( val, _values, result )
 result = Literal.new(val[0].to_i)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 55
  def _reduce_23( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

 # reduce 24 omitted

module_eval <<'.,.,', 'lib/doily/parser.y', 57
  def _reduce_25( val, _values, result )
 result = Object.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 58
  def _reduce_26( val, _values, result )
 result = Access.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 59
  def _reduce_27( val, _values, result )
 result = Access.new(val[0], eval(val[2]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 60
  def _reduce_28( val, _values, result )
 result = Call.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 64
  def _reduce_29( val, _values, result )
 result = Reference.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 68
  def _reduce_30( val, _values, result )
 result = Literal.new(eval(val[0]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 72
  def _reduce_31( val, _values, result )
 result = {}
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 73
  def _reduce_32( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 74
  def _reduce_33( val, _values, result )
 result = val[0].merge(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 78
  def _reduce_34( val, _values, result )
 result = { val[0] => val[2] }
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 82
  def _reduce_35( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 83
  def _reduce_36( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 84
  def _reduce_37( val, _values, result )
 result = [val[0]] + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 88
  def _reduce_38( val, _values, result )
 result = Assignment.new(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 92
  def _reduce_39( val, _values, result )
 result = Declaration.new(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 96
  def _reduce_40( val, _values, result )
 result = Call.new(Access.new(val[0], val[1]), [val[2]])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/doily/parser.y', 100
  def _reduce_41( val, _values, result )
 result = Assignment.new(val[0], Call.new(Access.new(val[0], '+'), [Literal.new(1)]))
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Doily
